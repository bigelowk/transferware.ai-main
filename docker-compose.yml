networks:
  transferware_network:
    driver: bridge
    
services:
  # Our replicated query APIs
  query_api:
    build:
      dockerfile: query_api.dockerfile
    volumes:
      - /var/transferware.ai-main/python_src/scratch:/python_src/scratch #TODO match with your system
    user: root #temporary
    environment:
      - "TRANSFERWARE_QUERY.TORCH_DEVICE=cpu" # TODO with the nvidia runtime this can be cuda
    deploy:
      replicas: 2
    depends_on:
      - balancer
      - broker
    networks:
      - transferware_network
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.query-api.rule=Host(`transferware-ai.umd.umich.edu`) && PathPrefix(`/api`)"
    #  - "traefik.http.routers.query-api.entrypoints=websecure"
    #  - "traefik.http.routers.query-api.tls=true"
    #  - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
    #  - "traefik.http.routers.query-api.middlewares=strip-api"
    #  - "traefik.http.services.query-api.loadbalancer.server.port=8080"

  # Serves the frontend
  static_site:
    build:
      dockerfile: static_site.dockerfile
    deploy:
      replicas: 2
    networks:
      - transferware_network
    depends_on:
      - balancer
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.static-site.rule=Host(`transferware-ai.umd.umich.edu`) && PathPrefix(`/`) && !PathPrefix(`/api`)"
    #  - "traefik.http.routers.static-site.entrypoints=websecure"
    #  - "traefik.http.routers.static-site.tls=true"

  # MQTT broker
  broker:
    hostname: broker
    image: eclipse-mosquitto
    ports:
      - "1883"
    volumes:
      - /var/transferware.ai-main/mosquitto.conf:/mosquitto/config/mosquitto.conf
    user: root #temporary
    networks:
      - transferware_network
    depends_on:
      - balancer
    #labels:
    #  - "traefik.enable=false"

  # Reverse proxy
  balancer:
    image: nginx:latest
    ports:
      - "80:80"  # HTTP
      - "8080:8080"
      - "443:443"  # HTTPS
    volumes:
      - /var/transferware.ai-main/nginx.conf:/etc/nginx/nginx.conf:ro
      #- /var/run/docker.sock:/var/run/docker.sock
      - /etc/letsencrypt/live/transferware-ai.umd.umich.edu/fullchain.pem:/etc/traefik/fullchain.pem:ro
      - /etc/letsencrypt/live/transferware-ai.umd.umich.edu/privkey.pem:/etc/traefik/privkey.pem:ro
    user: root #temporary
    networks:
      - transferware_network


    
    #image: traefik
    #ports:
    #  - "80:80"  # HTTP
    #  - "443:443"  # HTTPS
    #  - "8080:8080"  # Dashboard
    #volumes:
    #  - /var/transferware.ai-main/traefik.yml:/etc/traefik/traefik.yml
    #  - /var/run/docker.sock:/var/run/docker.sock
    #  - /etc/letsencrypt:/etc/letsencrypt:ro
      #- /etc/letsencrypt/live/transferware-ai.umd.umich.edu/fullchain.pem:/etc/traefik/fullchain.pem:ro
      #- /etc/letsencrypt/live/transferware-ai.umd.umich.edu/privkey.pem:/etc/traefik/privkey.pem:ro
    #user: root #temporary
    