    
services:
  # Our replicated query APIs
  query_api:
    build:
      dockerfile: query_api.dockerfile
    volumes:
      - /var/transferware.ai-main/python_src/scratch:/python_src/scratch #TODO match with your system
    user: root #temporary
    environment:
      - "TRANSFERWARE_QUERY.TORCH_DEVICE=cpu" # TODO with the nvidia runtime this can be cuda
      - MONGO_URI=mongodb://mongo-container:27017/SurveyApp
    deploy:
      replicas: 2
    depends_on:
      - balancer
      - mongodb
      - broker
    #networks:
    #  - transferware_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.query-api.rule=Host(`transferware-ai.umd.umich.edu`) && PathPrefix(`/api`)"
      - "traefik.http.routers.query-api.entrypoints=websecure"
      - "traefik.http.routers.query-api.tls=true"
      - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
      - "traefik.http.routers.query-api.middlewares=strip-api"
      - "traefik.http.services.query-api.loadbalancer.server.port=8080"

  # Serves the frontend
  static_site:
    build:
      dockerfile: static_site.dockerfile
    deploy:
      replicas: 2
    #networks:
    #  - transferware_network
    depends_on:
      - balancer
      #- mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static-site.rule=PathPrefix(`/`) && !PathPrefix(`/api`)"
   # environment:
   #   - "MONGO_URI: mongodb://mongodb:27017/mydatabase"
   
  survey_app:
    build: 
      dockerfile: survey-app/Dockerfile
    ports:
      - "5002:5001"
    environment:
      - MONGO_URI=mongodb://mongo-container:27017/SurveyApp
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.survey-app.rule=Host(`transferware-ai.umd.umich.edu`) && PathPrefix(`/survey`)"
      - "traefik.http.routers.survey-app.entrypoints=websecure"
      - "traefik.http.routers.survey-app.tls=true"
      - "traefik.http.services.survey-app.loadbalancer.server.port=5001"
    #networks:
    #  -transferware_network

  mongodb:
    image: docker.io/mongo:7.0
    container_name: mongo-container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # MQTT broker
  broker:
    hostname: broker
    image: eclipse-mosquitto
    ports:
      - "1883"
    volumes:
      - /var/transferware.ai-main/mosquitto.conf:/mosquitto/config/mosquitto.conf
    user: root #temporary
    #networks:
    #  - transferware_network
    depends_on:
      - balancer
    #labels:
    #  - "traefik.enable=false"

  # Reverse proxy
  balancer:
   
    image: traefik
    command:

    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
      - "8080:8080"  # Dashboard
      - "8081:8081" #Survey
    volumes:
      - /var/transferware.ai-main/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/letsencrypt/live/transferware-ai.umd.umich.edu/fullchain.pem:/etc/traefik/fullchain.pem:ro
      - /etc/letsencrypt/live/transferware-ai.umd.umich.edu/privkey.pem:/etc/traefik/privkey.pem:ro
    user: root #temporary
  
volumes: 
  mongo_data: